apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: syft
  labels:
    {{- include "openshift-pipelines-configurations.labels" . | nindent 4 }}
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Security
    tekton.dev/tags: CLI, syft
    tekton.dev/displayName: syft
    tekton.dev/platforms: "linux/amd64,linux/arm64"
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-pre-populate-only: "true"
    vault.hashicorp.com/agent-inject-token: "true"
    vault.hashicorp.com/role: "ci-system"
    vault.hashicorp.com/tls-skip-verify: "true"
spec:
  description: >-
   CLI tool and library for generating a Software Bill of Materials from container images and filesystem
  params:
    - name: IMAGE
      description: container image that syft will analyse
    - name: TUF_URL
      description: base TUF url for boostrappring cosign      
    - name: SYFT_IMAGE
      default: docker.io/anchore/syft@sha256:2b71d0408aa5254704340e642687c0dd926563c258aaa0832da2c3c1ecd0c8e2 # v0.66.2
      description: Syft image to be used
      type: string
    - name: COSIGN_IMAGE
      default: docker.io/bitnami/cosign:latest
      description: Cosing image to be used
      type: string      
  steps:
    - name: syft
      image: $(params.SYFT_IMAGE)
      command:
        - /bin/bash
      args:  
        - -c 
        - |
          syft package registry:$(params.IMAGE) -o spdx-json --file /attestation_tmp/attestation.sbom     
      volumeMounts:
      - name: tmp
        mountPath: /attestation_tmp              
    - name: cosign
      image: $(params.COSIGN_IMAGE)
      command:
        - /bin/bash
      env:
      - name: DOCKER_CONFIG
        value: /dockerconfig
      - name: VAULT_ADDR
        value: https://vault.vault.svc:8200
      - name: VAULT_SKIP_VERIFY
        value: "true"        
      args:
        - -c 
        - |
          export VAULT_TOKEN=$(cat /vault/secrets/token)
          cosign initialize --mirror=${TUF_URL} --root=${TUF_URL}/root.json
          cosign attest $(params.IMAGE) --key hashivault://ci-system --predicate /attestation_tmp/attestation.sbom --type spdxjson --attachment-tag-prefix sbom-
      volumeMounts:
      - name: tmp
        mountPath: /attestation_tmp
      - name: dockerconfig
        mountPath: /dockerconfig
        readOnly: true     
  volumes:
    - name: tmp
      emptyDir: {}
    - name: dockerconfig
      secret:
        secretName: quay-push      