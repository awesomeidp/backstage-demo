# apiVersion: batch/v1
# kind: CronJob
# metadata:
#   name: post-install
#   annotations:
#     argocd.argoproj.io/sync-wave: "28"
#   labels:
#     {{- include "sonarqube.labels" . | nindent 4 }}      
# spec:
#   schedule: "*/5 * * * *"
#   jobTemplate:
#     spec:
#       template:
#         spec:
#           containers:
#           - name: hello
#             image: openshift4/ose-tools-rhel8:latest
#             imagePullPolicy: IfNotPresent
#             command:
#             - /bin/sh
#             - -c
#             - |
#                 set -e
#                 if oc get secret sonarqube-credentials -n {{ .Release.Namespace }} ; then
#                     echo "credentials are already created exiting..."
#                 else
#                     echo "credentials don't exist"
#                     echo "changing admin password..."    
#                     curl -s -u admin:admin -X POST -H "Content-Type: application/json" https://{{ include "sonarqube.fullname" . }}-{{ .Release.Namespace }}.apps.{{ .Values.base_domain }}/api/users/change_password?login=admin&password=admin1&previousPassword=admin
#                     echo "creating token..."
#                     export token=$(curl -s -u admin:admin1 -X POST -H "Content-Type: application/json" https://{{ include "sonarqube.fullname" . }}-{{ .Release.Namespace }}.apps.{{ .Values.base_domain }}/api/user_tokens/generate?name=backstage | jq -r .token)
#                     echo "creating sonarqube-credentials secret..."
#                     oc create secret generic sonarqube-credentials -n {{ .Release.Namespace }} --from-literal=token=${token} --from-literal=username=admin --from-literal=password=admin1
#                 fi    
            
#           restartPolicy: OnFailure